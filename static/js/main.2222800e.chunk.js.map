{"version":3,"sources":["logo.svg","components/Home.js","components/About.js","components/Upload.js","components/GiveTest.js","components/MakeTest.js","components/Test.js","components/Paper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","to","className","About","useState","Upload","excel","file","setFile","console","log","encType","type","name","onChange","e","target","files","GiveTest","class","scope","MakeTest","sheet","state","setState","load","setLoad","style","width","padding","value","onClick","preventDefault","data","FormData","append","localStorage","setItem","fetch","method","body","then","res","json","catch","err","Test","ques","setQues","number","setNumber","useEffect","headers","Question","height","marginBottom","A","B","C","D","Questions","Paper","test","settest","getItem","JSON","stringify","map","items","id","question","a","b","c","d","r","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2222800e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport '../App.css'\r\n\r\n\r\nconst Home = () => {\r\n\r\n  \r\n  return (\r\n    <div>\r\n          Home\r\n          <div>\r\n            <Link to='/maketest'> <div className='btn btn-primary' >\r\nmake Test\r\n             </div>\r\n             </Link>\r\n            <Link to='/GiveTest'>\r\n            <div className='btn btn-primary'>\r\nTake test\r\n             </div>\r\n            </Link>\r\n       \r\n          </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React,{useState} from 'react'\r\n\r\nimport Home from './Home'\r\n\r\nconst About = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n   \r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            About\r\n\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\n\r\nconst Upload = () => {\r\n    const [file , setFile] = useState({\r\n        excel:null\r\n    })\r\n  \r\n    console.log(file)\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <form  encType='multipart/form-data'>\r\n                <div className='form-group'>\r\n                  <input type='file'\r\n                   className='form-control'\r\n                   name='file'\r\n                   onChange={(e)=>{setFile({...file,excel:e.target.files[0]})}} />\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n","import React from 'react'\r\nimport {Link,Redirect} from 'react-router-dom'\r\n\r\nconst GiveTest = () => {\r\n    return (\r\n        <div>\r\n            <div className='alert alert-dark'>\r\n             Please select a test\r\n            </div>\r\n\r\n\r\n           <table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Chapter</th>\r\n      <th scope=\"col\">questions</th>\r\n      <th scope=\"col\">time</th>\r\n      <th scope='col'>try</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">1</th>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n      <td><Link to='/Test'><button className='btn btn-danger'>select</button></Link></td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">2</th>\r\n      <td>Jacob</td>\r\n      <td>Thornton</td>\r\n      <td>@fat</td>\r\n      <td><button className='btn btn-danger'>select</button></td>\r\n    </tr>\r\n    <tr>\r\n      <th scope=\"row\">3</th>\r\n      <td>Larry</td>\r\n      <td>the Bird</td>\r\n      <td>@twitter</td>\r\n      <td><button className='btn btn-danger'>select</button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiveTest\r\n","import React,{useState} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst MakeTest = () => {\r\n\r\n    const [state,setState] = useState({\r\n        file:null,\r\n        name:'',\r\n        sheet:''\r\n\r\n    })\r\n\r\n    const [paper,setPaper]=useState([])\r\n    const [load,setLoad] = useState(false)\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const data= new FormData();\r\n        data.append('file2',state.file,state.file.name)\r\n        data.append('name',state.name)\r\n        data.append('sheet',state.sheet)\r\n        localStorage.setItem('name',state.name)\r\n        // console.log(data)\r\n        fetch(`https://blueberry-crumble-01022.herokuapp.com/try`,{\r\n            method: 'POST',     \r\n         body:data     \r\n        })\r\n        .then(res=>res.json(res))\r\n        .then(data=>{\r\n         console.log(data)\r\n         setLoad(load=>true)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n    }\r\n\r\n    \r\n    \r\n     const table =()=>{\r\n       if(load){\r\n         return(\r\n          <div className='container'>\r\n                   {\r\n                     paper.map(pic=>\r\n                      <div>\r\n                        {pic.Question}\r\n                      </div>\r\n                      )\r\n                   }\r\n          </div>\r\n         )\r\n       }\r\n     }\r\n\r\n    console.log(state)\r\n    if(!load){\r\n      return (\r\n        <div>\r\n            <h1>Make a Question paper</h1>\r\n            <div className='container alert alert-success'>\r\n               Please Enter a Excel file in the Input : ex-- Book1.xlsx<br/>\r\n               Please Enter a Chapter name as you like..<br/>\r\n               please Enter the Sheet number og your excel file..\r\n            </div>\r\n          <div className='card mx-auto' style={{width:'70vw',padding:'10px'}}>\r\n          <form className='container' >\r\n                <div className='form-group'>\r\n                <label className='alert alert-success'>Upload XLS file</label>\r\n                <input\r\n                 className='form-control' \r\n                 \r\n                 type='file'\r\n                 \r\n                 onChange={(e)=>\r\n                   setState({...state,file:e.target.files[0]})\r\n                 }\r\n                 />\r\n                </div>\r\n                <div className='from-group'>\r\n                 <label>name of Chapter</label>\r\n                 <input type='text'\r\n                  className=' form-control'\r\n                  value={state.name}\r\n                  onChange={(e)=>{setState({...state,name:e.target.value})}}\r\n                  />\r\n                </div>\r\n                <div className='from-group'>\r\n                 <label>name of Sheet</label>\r\n                 <input type='text'\r\n                  className=' form-control'\r\n                  value={state.sheet}\r\n                  onChange={(e)=>{setState({...state,sheet:e.target.value})}}\r\n                  />\r\n                </div>\r\n                <div className='form-group'>\r\n                 <button className='btn btn-warning'\r\n                 onClick={onSubmit}\r\n                 > \r\n                   Submit\r\n                 </button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n\r\n         \r\n           \r\n            </div>\r\n      )\r\n    }else{\r\n      return <Redirect to='/Paper'/>\r\n        \r\n    }   \r\n\r\n           \r\n         \r\n    \r\n}\r\n\r\nexport default MakeTest\r\n","import React,{useEffect,useState} from 'react'\r\n\r\nconst Test = () => {\r\n\r\n\r\n    const [ques,setQues]=useState([])\r\n    const [load,setLoad]=useState(false)\r\n    const i = 0;\r\n    const [number,setNumber]=useState(0)\r\n    useEffect(() => {\r\n       fetch(`http://localhost:3001`,{\r\n           method:'GET',\r\n           headers: {'Content-Type':'application/json'}\r\n           \r\n       })\r\n       .then(res=>res.json(res))\r\n       .then(data=>\r\n        {\r\n            setQues(ques=>data)\r\n            setLoad(load=>true)\r\n         \r\n        })\r\n       .catch(err=>console.log(err))\r\n    }, [])\r\n     \r\n   console.log(number)\r\n  console.log(ques)\r\n\r\n  const Questions =()=>{\r\n      if(load){\r\n          return(\r\n              <div>\r\n                     <div>\r\n                         <div className='row'>\r\n                             <div className='col-md-3'>\r\n                             <div  >\r\n                                   <button className='btn btn-warning' onClick={()=>{\r\n                                       setNumber(number=>number - 1)\r\n                                   }}>\r\n                                       -\r\n                                   </button>\r\n                                 </div>\r\n                             </div>\r\n                             <div className='col-md-6'>\r\n          <h1>{number+1\r\n          } --{ques[number].Question}</h1>\r\n                             </div>\r\n                             <div className='col-md-3'>\r\n                                 <div  >\r\n                                   <button className='btn btn-warning' onClick={()=>{\r\n                                       setNumber(number=>number + 1)\r\n                                   }}>\r\n                                       +\r\n                                   </button>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                    \r\n                     \r\n                     <br/>\r\n                     <div className='card' style={{height:'100%'}}>\r\n                         <div className='row'>\r\n                           <div className='card col-md-6' style={{marginBottom:'10px'}}>1.<div className='btn btn-secondary mx-auto' style={{width:'50%'}}> {ques[number].A}</div> </div>\r\n                           <div className='card col-md-6' style={{marginBottom:'10px'}}>2.<div className='btn btn-secondary mx-auto'  style={{width:'50%'}}> {ques[number].B}</div></div>\r\n                           <div className='card col-md-6' style={{marginBottom:'10px'}}>3. <div className='btn btn-secondary mx-auto'  style={{width:'50%'}}> {ques[number].C}</div> </div>\r\n\r\n                           <div className=' card col-md-6' style={{marginBottom:'10px'}}>4.<div className='btn btn-secondary mx-auto'  style={{width:'50%'}}> {ques[number].D}</div> </div>\r\n                  \r\n                          </div> \r\n                          \r\n                     </div>\r\n                    </div>\r\n\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            test\r\n             <div className='Container'>\r\n                 {/* {\r\n                     ques.map(items=>\r\n                     <div>\r\n                        <h1>{items.Question}</h1>\r\n                     </div>\r\n                     )\r\n                 } */}\r\n                   {\r\n                       Questions()\r\n                   }\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n","import React,{useEffect,useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Paper = () => {\r\n    \r\n    const [test,settest]=useState([])\r\n    const [load,setLoad]=useState(false)\r\n    console.log(localStorage.getItem('name'))\r\n    useEffect(() => {\r\n        fetch(`https://blueberry-crumble-01022.herokuapp.com/ok`,{\r\n            method: 'POST',\r\n            headers:{'Content-Type':'application/json'} ,        \r\n            body: JSON.stringify({ name:localStorage.getItem('name') })\r\n        })\r\n        .then(res=>res.json(res))\r\n        .then(data=>{\r\n         \r\n         settest(test=>data)\r\n         setLoad(load=>true)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n    }, [])\r\n\r\n    console.log(test)\r\n\r\n    const sheet =()=>{\r\n        if(load){\r\n            return(\r\n                <div className='container'>\r\n                    <Link to='/'>\r\n                        <button className='btn btn-primary'>\r\n                        Go back\r\n                        </button>\r\n                    \r\n                    </Link>\r\n\r\n                    <div className='alert alert-success'>\r\nThe Questions that you submit is\r\n                    </div>\r\n                          <table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">No</th>\r\n      <th scope=\"col\">Question</th>\r\n      <th scope=\"col\">A</th>\r\n      <th scope=\"col\">B</th>\r\n      <th scope=\"col\">C</th>\r\n      <th scope=\"col\">D</th>\r\n      <th scope=\"col\">Right answer</th>\r\n\r\n    </tr>\r\n  </thead>\r\n\r\n    \r\n      {\r\n          test.map(items=>\r\n            <tbody>\r\n    <tr>\r\n                <th scope=\"row\">{items.id}</th>\r\n                <td>{items.question}</td>\r\n                <td>{items.a}</td>\r\n                <td>{items.b}</td>\r\n                <td>{items.c}</td>\r\n                <td>{items.d}</td>\r\n                <td>{items.r}</td>\r\n           </tr>\r\n           </tbody>\r\n            )\r\n      }\r\n      \r\n    \r\n</table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n   \r\n     console.log(load)\r\n    return (\r\n        <div>\r\n             {\r\n                 sheet()\r\n             }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paper\r\n","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport logo from './logo.svg';\nimport Home from './components/Home'\nimport About from './components/About'\nimport Upload from './components/Upload'\n\nimport './App.css';\nimport GiveTest from './components/GiveTest';\nimport MakeTest from './components/MakeTest';\nimport Test from './components/Test';\nimport Paper from './components/Paper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n     <BrowserRouter>\n      <Switch>\n        <Route path='/' exact component={Home}/>\n        <Route path='/about' exact component={About}/>\n        <Route path='/upload' exact component={Upload}/>\n        <Route path='/GiveTest' exact component={GiveTest}/>\n        <Route path='/MakeTest' exact component={MakeTest}/>\n        <Route path='/Test' exact component={Test}/>\n        <Route path='/Paper' exact component={Paper}/>\n      </Switch> \n     \n     </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}